{"version":3,"sources":["components/DataCards.tsx","components/AddItem.tsx","components/CardAssembly.tsx","components/AppDrawer.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["DataCards","props","_React$useState","React","_React$useState2","Object","slicedToArray","desc","setDesc","publisher","publishedAt","authors","description","react","Card","sx","maxWidth","height","CardHeader","avatar","Avatar","bgcolor","red","aria-label","FileCopy_default","a","action","IconButton","onClick","MoreVert_default","title","subheader","isbn","CardContent","Typography","variant","color","Additem","type","dayjs","Date","now","format","data","setData","Box","position","top","left","transform","Paper","elevation","padding","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","e","objectSpread","defineProperty","target","MenuItem","TextField","size","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","inputFormat","newVal","renderInput","params","placeholder","multiline","Button","console","log","axios","post","then","d","status","url","window","URL","createObjectURL","Blob","saveAs","close","catch","backgroundColor","CardAssembly","toolBox","setToolBox","_React$useState3","_React$useState4","_React$useState5","_React$useState6","openModal","setOpenModal","handleClick","urlString","get","margin","paddingLeft","display","justifyContent","Modal","open","onClose","aria-labelledby","aria-describedby","concat","toConsumableArray","Grid2","spacing","columns","map","element","index","key","AppDrawer","visibility","setVisibility","listData","icon","Home_default","fontSize","name","LibraryBooks_default","Newspaper_default","toggleDrawer","event","edge","mr","Menu_default","Drawer","PaperProps","opacity","anchor","width","role","onKeyDown","List","ListItem","disablePadding","dist","to","ListItemButton","ListItemIcon","ListItemText","textDecoration","primary","Navbar","AppBar","Toolbar","component","App","react_default","createElement","className","react_router_dist","path","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.83600ea5.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\n\r\n\r\nexport interface ICardsProps {\r\n    title:string | null ,\r\n    isbn: string |null\r\n    authors: string |null,\r\n    publishedAt?:Date | null,\r\n    description?:string | null\r\n}\r\n\r\nexport function DataCards (props: ICardsProps) {\r\n   const [desc,setDesc]=React.useState(false);\r\n  const publisher=props.publishedAt?'Published at : '+props.publishedAt:'';\r\n  const authors= props.authors?'Authors : '+ props.authors:'';\r\n  const description=props.description?'Description : '+props.description:'';\r\n  return (\r\n    <>\r\n    <Card sx={{ maxWidth: 'auto',height:'100%' }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n           <FileCopyIcon/>\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton onClick={()=>{desc?setDesc(false):setDesc(true)}} aria-label=\"settings\">\r\n            <MoreVertIcon  />\r\n          </IconButton>\r\n        }\r\n        title={props.title}\r\n        subheader={'isbn :'+ props.isbn}\r\n      />\r\n      <CardContent>\r\n       {(desc)?((description)?<Typography variant=\"body2\" color=\"text.secondary\">\r\n          {description}\r\n        </Typography>:<Typography variant=\"body2\" color=\"text.secondary\">\r\n          No description for magazines\r\n        </Typography>):\r\n        <><Typography variant=\"body2\" color=\"text.secondary\">\r\n          {publisher}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {authors}\r\n        </Typography></>}\r\n          </CardContent>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Paper, Grid, TextField, Chip, FormControl, InputLabel, Select, MenuItem, Button } from '@mui/material'\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers'\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\r\nimport * as React from 'react'\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport axios from 'axios'\r\nimport {saveAs} from 'file-saver'\r\ninterface IAdditemProps {\r\n close: any,\r\n setData:any\r\n}\r\ninterface FormData{\r\n    type: string,\r\n    title?:string,\r\n    authors?:string,\r\n    isbn?: string,\r\n    publishedAt?: string|null,\r\n    description?: string |null\r\n\r\n}\r\nexport default function Additem(props: IAdditemProps) {\r\n const [data,setData]=React.useState<FormData>({\r\n    type: \"book\",\r\n    title:\"\",\r\n    authors:\"\",\r\n    isbn: \"\",\r\n    publishedAt: dayjs(Date.now()).format('DD.MM.YYYY'),\r\n    description: \"\"\r\n\r\n})\r\n\r\nconst handleSubmit=()=>{\r\n    console.log(data);\r\n    const res=axios.post('/data',data)\r\n    res.then((d)=>{console.log(d.status); \r\n                    let url=window.URL.createObjectURL(new Blob([d.data]));\r\n                    saveAs(url,data.type+'.csv'),\r\n                    props.setData(data);\r\n                    props.close()}).catch(e=>{console.log(e); props.close()});\r\n}\r\n\r\n\r\nreturn <>\r\n        <Box sx={{\r\n            position: 'absolute' as 'absolute', top: '50%', left: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            <Paper elevation={3} sx={{ padding: '5%' }}>\r\n                <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                    <Grid item xs={11}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"type-val\">Type</InputLabel>\r\n                            <Select\r\n                                labelId=\"type-val\"\r\n                                id=\"type-select\"\r\n                                value={data.type}\r\n                                label=\"Type\"\r\n                                onChange={(e) => {setData({...data,[\"type\"]: e.target.value}) }}\r\n                            >\r\n                                <MenuItem value={'book'}>Book</MenuItem>\r\n                                <MenuItem value={'magazine'}>Magazine</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <span><TextField \r\n                        id=\"outlined-title\"\r\n                        size=\"small\"\r\n                        label=\"Title\"\r\n                        value={data.title}\r\n                        onChange={(e) => {setData({...data,[\"title\"]: e.target.value}) }}\r\n                        variant=\"outlined\" />\r\n                        </span>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <span><TextField id=\"outlined-isbn\" value={data.isbn}\r\n                        onChange={(e) => {setData({...data,[\"isbn\"]: e.target.value}) }}\r\n                        size=\"small\" label=\"isbn\" variant=\"outlined\" />\r\n                        </span>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <span><TextField id=\"outlined-author\" \r\n                        value={data.authors} \r\n                        onChange={(e) => {setData({...data,[\"authors\"]: e.target.value}) }}\r\n                        size=\"small\" label=\"Author\" variant=\"outlined\" />\r\n                        </span>\r\n                    </Grid>\r\n                   \r\n                   {data.type==='magazine' && <Grid item xs={6}>\r\n                        <span>\r\n\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <DesktopDatePicker\r\n                                    label=\"Date desktop\"\r\n                                    inputFormat=\"DD.MM.YYYY\"\r\n                                    value={data.publishedAt}\r\n                                    onChange={(newVal) => {setData({...data,[\"publishedAt\"]: dayjs(newVal).format('DD.MM.YYYY')}) }}\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                />\r\n\r\n                            </LocalizationProvider>\r\n                        </span>\r\n                    </Grid>}\r\n                   \r\n                    {data.type==='book' && <Grid item xs={11}>\r\n                        <span>    <TextField\r\n                            fullWidth\r\n                            id=\"outlined-description\"\r\n                            label=\"Description\"\r\n                            value={data.description}\r\n                            onChange={(e) => {setData({...data,[\"description\"]: e.target.value}) }}\r\n                            placeholder=\"Enter the Description\"\r\n                            multiline\r\n                        /></span>\r\n                    </Grid>}\r\n                    <Grid item xs={6}>\r\n                        <Button id=\"submit-button\" onClick={handleSubmit} sx={{ backgroundColor: 'black' }} variant=\"contained\" >Submit</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Paper>\r\n        </Box>\r\n    </>\r\n}","import * as React from 'react';\r\nimport { DataCards } from './DataCards';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport axios from 'axios';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\nimport Additem from './AddItem';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nexport interface ICardAssemblyProps {\r\n    type: string\r\n}\r\ninterface FormData {\r\n    authors?: string,\r\n    isbn?: string,\r\n}\r\ninterface BooksType {\r\n    title?: string,\r\n    authors?: string,\r\n    isbn?: string,\r\n    description?: string | null\r\n}\r\ninterface magazineType {\r\n    title?: string,\r\n    authors?: string,\r\n    isbn?: string,\r\n    publishedAt?: Dayjs | null\r\n\r\n}\r\nexport function CardAssembly(props: ICardAssemblyProps) {\r\n    const [toolBox, setToolBox] = React.useState<FormData>({authors:'',isbn:''});\r\n    const [data, setData] = React.useState<(BooksType | magazineType)[]>([]);\r\n    const [openModal, setOpenModal] = React.useState<boolean>(false);\r\n\r\n    const handleClick=(type:string)=>{\r\n        let urlString:string=' ';\r\n        if(type===\"authors\" && toolBox.authors!=''){\r\n            urlString='/dataByAuthor/'+toolBox.authors;\r\n        }\r\n        else if(type===\"isbn\" && toolBox.isbn!=''){\r\n            \r\n            urlString='/dataByIsbn/'+toolBox.isbn;\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n        const res = axios.get(urlString);\r\n        res.then(d => {\r\n            setData(d.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        })\r\n    }\r\n    const refresh=()=>{\r\n        if (props.type === 'data' || props.type === 'books' || props.type === 'magazines') {\r\n            const res = axios.get('/' + props.type);\r\n            res.then(d => {\r\n                setData(d.data);\r\n            }).catch((e) => {\r\n                console.log(e);\r\n            })\r\n        }\r\n\r\n    }   \r\n     React.useEffect(() => {\r\n        if (props.type === 'data' || props.type === 'books' || props.type === 'magazines') {\r\n            const res = axios.get('/' + props.type);\r\n            res.then(d => {\r\n                setData(d.data);\r\n            }).catch((e) => {\r\n                console.log(e);\r\n            })\r\n        }\r\n\r\n    }, [props.type]);\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ margin: '1%', paddingLeft: '1%', display: 'flex', justifyContent: 'left' }}>\r\n                <Modal\r\n                    open={openModal}\r\n                    onClose={() => setOpenModal(false)}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                >\r\n                    <Additem close={() => { setOpenModal(false) }} setData={(d: (BooksType | magazineType)) => { setData([d, ...data]) }} />\r\n                </Modal>\r\n                <Button sx={{ margin: '1%', backgroundColor: \"black\" }} variant=\"contained\" onClick={() => setOpenModal(true)}>Add item</Button>\r\n                <TextField sx={{ margin: '1%' }} id=\"outlined-basic\"\r\n                    onChange={(e) => setToolBox({ ...toolBox, [\"isbn\"]: e.target.value })}\r\n                    value={toolBox ? toolBox.isbn : ''} label=\"isbn\" size=\"small\" variant=\"outlined\" />\r\n                <Button sx={{ margin: '1%', backgroundColor: \"black\" }} onClick={()=>{handleClick('isbn')}} variant=\"contained\">Search by isbn</Button>\r\n                <TextField sx={{ margin: '1%' }} id=\"outlined-basic\"\r\n                    onChange={(e) => setToolBox({ ...toolBox, [\"authors\"]: e.target.value })}\r\n                    value={toolBox ? toolBox.authors : ''} label=\"author\" size=\"small\" variant=\"outlined\" />\r\n                <Button sx={{ margin: '1%', backgroundColor: \"black\" }} onClick={()=>{handleClick('authors')}} variant=\"contained\">Search by authors</Button>\r\n                <Button sx={{ margin: '1%', backgroundColor: \"black\" }} onClick={refresh} variant=\"contained\">List All</Button>\r\n                 </Box>\r\n            <Grid container sx={{ margin: '1%' }} spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                {data.map((element: any, index) => (\r\n                    <Grid xs={2} sm={4} md={4} key={index}>\r\n                        <DataCards\r\n                            title={element.title}\r\n                            isbn={element.isbn}\r\n                            authors={element.authors}\r\n                            publishedAt={element.publishedAt}\r\n                            description={element.description}\r\n\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LibraryBooksIcon from '@mui/icons-material/LibraryBooks';\r\nimport NewspaperIcon from '@mui/icons-material/Newspaper';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function AppDrawer() {\r\n  const [visibility, setVisibility] = React.useState(false);\r\n  const listData:any=[{icon : <HomeIcon sx={{fontSize:20,color:'white'}}/>,name:'Home' }, \r\n  {icon : <LibraryBooksIcon  sx={{fontSize:20,color:'white'}}/>,name:'Books' }, \r\n  {icon : <NewspaperIcon sx={{fontSize:20,color:'white'}}/>,name:'Magazines' }]\r\n\r\n  const toggleDrawer =\r\n    (open: boolean) =>\r\n      (event: React.KeyboardEvent | React.MouseEvent) => {\r\n        if (\r\n          event.type === 'keydown' &&\r\n          ((event as React.KeyboardEvent).key === 'Tab' ||\r\n            (event as React.KeyboardEvent).key === 'Shift')\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        setVisibility(open);\r\n      };\r\n\r\n  const list = () => (\r\n    <Box\r\n      sx={{ width: 'auto' }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {listData\r\n        .map((element:any) => (\r\n        <ListItem key={element.name} disablePadding>\r\n         <Link to={`/${element.name==='Home'?'':element.name}`}>\r\n          <ListItemButton>\r\n            <ListItemIcon>\r\n              {element.icon}\r\n            </ListItemIcon>\r\n            <ListItemText sx={{color:'white',textDecoration:'None'}} primary={element.name} />\r\n          </ListItemButton>\r\n          </Link>\r\n        </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={toggleDrawer(true)} edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Drawer\r\n\r\n        PaperProps={{\r\n          sx: { backgroundColor: 'black', color: 'white', opacity: '90%', top: '8%', margin: '0%', padding: '0%' }\r\n        }}\r\n        anchor='left'\r\n        open={visibility}\r\n        onClose={toggleDrawer(false)}\r\n      >\r\n        {list()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport AppDrawer from './AppDrawer'\r\nexport interface INavbarProps {\r\n\r\n}\r\n\r\nexport function Navbar(props: INavbarProps) {\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" sx={{backgroundColor:'black',height:'8%'}}>\r\n        <Toolbar variant=\"dense\">\r\n         <AppDrawer/>\r\n          <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n            Books and Magazines\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { CardAssembly } from './components/CardAssembly';\nimport { Navbar } from './components/Navbar';\nimport {BrowserRouter,Routes,Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <BrowserRouter>\n      <Navbar/>\n        <Routes>\n        <Route path='/' element={<CardAssembly type='data'/>} />  \n        <Route path='/Books' element={<CardAssembly type='books'/>} />\n        <Route path='/Magazines' element={<CardAssembly type='magazines'/>} />\n        </Routes>      \n      </BrowserRouter>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}